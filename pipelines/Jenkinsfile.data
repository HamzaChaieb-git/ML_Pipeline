pipeline {
    agent any
    
    environment {
        BASE_IMAGE = 'hamzachaieb01/ml-pipeline'
        DATA_IMAGE = 'hamzachaieb01/ml-data'
        TAG = 'latest'
    }
    
    stages {
        stage('Docker Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                }
            }
        }
        
        stage('Pull Base Image') {
            steps {
                retry(3) {
                    sh 'docker pull ${BASE_IMAGE}:${TAG}'
                }
            }
        }
        
        stage('Process Data') {
            steps {
                script {
                    def baseImage = "${env.BASE_IMAGE}:${env.TAG}"
                    def dataImageLogs = "${env.DATA_IMAGE}:${env.TAG}-logs"
                    try {
                        sh """
                            docker run -d --name data_processing "${baseImage}" tail -f /dev/null
                            docker exec data_processing bash -c "python -u -m main prepare_data > /app/data_output.txt 2>&1"
                            docker commit data_processing "${dataImageLogs}"
                            docker push "${dataImageLogs}"
                            docker rm -f data_processing
                            echo "âœ… Data processing complete. Image: ${dataImageLogs}"
                        """
                    } catch (Exception e) {
                        echo "Error during data processing: ${e.message}"
                        currentBuild.result = 'UNSTABLE'
                    }
                }
            }
        }
    }
    
    post {
        always {
            sh 'docker logout || true'
        }
        success {
            echo "Data pipeline complete. Processed data image: ${DATA_IMAGE}:${TAG}-logs"
        }
        unstable {
            echo "Data processing completed with issues, but pipeline finished. Image: ${DATA_IMAGE}:${TAG}-logs"
        }
    }
}
