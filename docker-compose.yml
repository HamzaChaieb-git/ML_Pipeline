version: '3.8'

services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    ports:
      - "8000:8000"
    volumes:
      - /home/hamza/hamza-chaieb-4DS1-ml_project/artifacts:/app/artifacts
      - /home/hamza/hamza-chaieb-4DS1-ml_project/app.py:/app/app.py
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    ports:
      - "8501:8501"
    volumes:
      - /home/hamza/hamza-chaieb-4DS1-ml_project/artifacts:/app/artifacts
      - /home/hamza/hamza-chaieb-4DS1-ml_project/streamlit_app.py:/app/streamlit_app.py
    depends_on:
      fastapi:
        condition: service_healthy
    networks:
      - app_network

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    ports:
      - "5001:5001"
    volumes:
      - /home/hamza/hamza-chaieb-4DS1-ml_project/mlflow.db:/app/mlflow.db
      - /home/hamza/hamza-chaieb-4DS1-ml_project/artifacts:/app/artifacts
    networks:
      - app_network

  pipeline:
    build:
      context: .
      dockerfile: Dockerfile.pipeline
    volumes:
      - /home/hamza/hamza-chaieb-4DS1-ml_project:/app  # Mount the entire project root for all files
      - /home/hamza/hamza-chaieb-4DS1-ml_project/artifacts:/app/artifacts  # Specific mount for artifacts
      - /home/hamza/hamza-chaieb-4DS1-ml_project/mlflow.db:/app/mlflow.db  # Specific mount for MLflow DB
    depends_on:
      mlflow:
        condition: service_started
    networks:
      - app_network

networks:
  app_network:
    driver: bridge